local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()


local window = Fluent:CreateWindow({
    Title = "Fling to Climb @",
    SubTitle = "by N&C",
    TabWidth = 160,
    Size = UDim2.fromOffset(580, 460),
    Acrylic = true,
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.LeftControl
})

local Tabs = {
    MainTab = window:AddTab({ Title = "Main", Icon = "" }),
}

local Options = Fluent.Options

local CONFIG = {
    disableStun = false
}

if game.Lighting:FindFirstChildOfClass('DepthOfFieldEffect') then
    game.Lighting:FindFirstChildOfClass('DepthOfFieldEffect'):Destroy()
end
if game.Lighting:FindFirstChildOfClass('DepthOfFieldEffect') then
    game.Lighting:FindFirstChildOfClass('DepthOfFieldEffect'):Destroy()
end

local function disableStun()
    if not CONFIG.disableStun then return end
    
    local hookModule = require(localPlayer.PlayerScripts.HookSystem["PlayerHookSystem.u"])
    
    hookModule.Stun = function() return false end
    
    if hookModule._config and hookModule._config.gmplay and hookModule._config.gmplay.stun then
        hookModule._config.gmplay.stun.time = 0
    end
    
    spawn(function()
        while CONFIG.disableStun do
            if hookModule._vars and not hookModule._vars.hook.active then
                hookModule._vars.hook.active = true
                hookModule._vars.char.JumpActive = true
            end
            wait(0.1)
        end
    end)
end

local PowerFlingChange = Tabs.MainTab:AddInput("PowerFlingChange", {
        Title = "Power of Fling",
        Default = 100,
        Placeholder = 9999999,
        Numeric = true,
        Finished = false,
        Callback = function(Value)
           
            local mt = getrawmetatable(game)
            local old_newindex = mt.__newindex
            local multiplier = tonumber(Value)
            setreadonly(mt, false)
            
            mt.__newindex = function(self, prop, value)
            
                if tostring(self) == "AlignPosition" then
                    local parent = self.Parent
                    if parent and parent.Parent and tostring(parent.Parent) == "PlayerHitboxes" then
            
                        if prop == "MaxForce" then
                            return old_newindex(self, prop, value * multiplier)
                        end
                        
            
                        if prop == "Responsiveness" then
                            return old_newindex(self, prop, 200)
                        end
                        
            
                        if prop == "MaxVelocity" then
                            return old_newindex(self, prop, value * multiplier)
                        end
                        
            
                        if prop == "MaxAxesForce" then
                            return old_newindex(self, prop, value * multiplier)
                        end
                    end
                end
                
                return old_newindex(self, prop, value)
            end
            
        setreadonly(mt, true)
           
           print('New power:', Value)
        end   
})


local MaxHookDistance = Tabs.MainTab:AddInput("MaxHookDistance", {
        Title = "max Hook Distance",
        Default = 11,
        Placeholder = 11,
        Numeric = true,
        Finished = false,
        Callback = function(Value)
           
        local valuetochange = "maxHookDist"
        
        for i,v in pairs(getgc(true)) do
        if v and type(v) == 'table' and rawget(v, valuetochange) then
        warn("Setted range to", Value)
        rawset(v, valuetochange, tonumber(Value))
        end
        end
           
        end
})



Tabs.MainTab:AddButton({
    Title = "Anti-Stun",
    Description = "",
    Callback = function()
     if game.Players.LocalPlayer.Character ~= nil and game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') and game.Players.LocalPlayer.Character:FindFirstChild('Humanoid') and game.Players.LocalPlayer.Character:FindFirstChild('Humanoid').Health > 0 and not isAutoHealEnabled then

        disableStun()

    end
  end
})
