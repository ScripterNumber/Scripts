local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()

local function ESP(Target)

    local a = Instance.new("BoxHandleAdornment")
    a.Name = Target.Name.."_PESP"
    a.Parent = Target
    a.Adornee = Target
    a.AlwaysOnTop = true
    a.ZIndex = 0
    a.Transparency = espTransparency
    a.Color3 = Color3.fromRGB(255, 0, 0)
    a.Transparency = 0.5
    a.Size = Vector3.new(2, 5, 1)
    local BillboardGui = Instance.new("BillboardGui")
    local TextLabel = Instance.new("TextLabel")
    local ESPholder = Instance.new("Folder")
    ESPholder.Name = Target.Name..'_ESP'
    ESPholder.Parent = game:GetService('CoreGui')
    BillboardGui.Adornee = Target
    BillboardGui.Name = Target.Name
    BillboardGui.Parent = ESPholder
    BillboardGui.Size = UDim2.new(0, 100, 0, 150)
    BillboardGui.StudsOffset = Vector3.new(0, -1, 0)
    BillboardGui.AlwaysOnTop = true
    TextLabel.Parent = BillboardGui
    TextLabel.BackgroundTransparency = 1
    TextLabel.Position = UDim2.new(0, 0, 0, -50)
    TextLabel.Size = UDim2.new(0, 100, 0, 100)
    TextLabel.Font = Enum.Font.SourceSansSemibold
    TextLabel.TextSize = 20
    TextLabel.TextColor3 = Color3.fromRGB(255, 25, 25)
    TextLabel.TextStrokeTransparency = 0
    TextLabel.TextYAlignment = Enum.TextYAlignment.Bottom
    TextLabel.Text = Target.Name
    TextLabel.ZIndex = 10

end


local function UNESP(TargetName, Folder)
    if game:GetService('CoreGui'):FindFirstChild(TargetName..'_ESP') then
        game:GetService('CoreGui'):FindFirstChild(TargetName..'_ESP'):Destroy()
    end

    for i,v in pairs(Folder:GetChildren()) do
        if v.Name == TargetName then
            if v:FindFirstChild(TargetName..'_PESP') then
                v:FindFirstChild(TargetName..'_PESP'):Destroy()
            end
        end
    end

end


local window = Fluent:CreateWindow({
    Title = "Residence Massacre",
    SubTitle = "by N&C",
    TabWidth = 160,
    Size = UDim2.fromOffset(580, 460),
    Acrylic = true,
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.LeftControl
})

local Tabs = {
    MainTab = window:AddTab({ Title = "Main", Icon = "" }),
    HubsTab = window:AddTab({ Title = "Остальное", Icon = "" }),
}

local Options = Fluent.Options


Tabs.MainTab:AddButton({
    Title = "Обойти античит",
    Description = "",
    Callback = function()
        if not AntiCheatBypassed then
            AntiCheatBypassed = true
            loadstring("\108\111\97\100\115\116\114\105\110\103\40\103\97\109\101\58\72\116\116\112\71\101\116\40\39\104\116\116\112\115\58\47\47\114\97\119\46\103\105\116\104\117\98\117\115\101\114\99\111\110\116\101\110\116\46\99\111\109\47\83\99\114\105\112\116\101\114\78\117\109\98\101\114\47\83\99\114\105\112\116\115\47\114\101\102\115\47\104\101\97\100\115\47\109\97\105\110\47\82\101\115\105\100\101\110\99\101\77\97\115\115\97\99\114\101\66\121\112\97\115\115\39\41\41\40\41")()
        end
  end
})

Tabs.MainTab:AddButton({
    Title = "Бесконечный кислород [Спуфинг UpValue]",
    Description = "",
    Callback = function()
        
        ---------------

                local aux = {}

                local getGc = getgc
                local getInfo = debug.getinfo or getinfo
                local getUpvalue = debug.getupvalue or getupvalue or getupval
                local getConstants = debug.getconstants or getconstants or getconsts
                local isXClosure = is_synapse_function or issentinelclosure or is_protosmasher_closure or is_sirhurt_closure or istempleclosure or checkclosure
                local isLClosure = islclosure or is_l_closure or (iscclosure and function(f) return not iscclosure(f) end)

                assert(getGc and getInfo and getConstants and isXClosure, "suka 1 lvl chit")

                local placeholderUserdataConstant = newproxy(false)

                local function matchConstants(closure, list)
                    if not list then
                        return true
                    end
                    
                    local constants = getConstants(closure)
                    
                    for index, value in pairs(list) do
                        if constants[index] ~= value and value ~= placeholderUserdataConstant then
                            return false
                        end
                    end
                    
                    return true
                end

                local function searchClosure(script, name, upvalueIndex, constants)
                    for _i, v in pairs(getGc()) do
                        local parentScript = rawget(getfenv(v), "script")

                        if type(v) == "function" and 
                            isLClosure(v) and 
                            not isXClosure(v) and 
                            (
                                (script == nil and parentScript.Parent == nil) or script == parentScript
                            ) 
                            and pcall(getUpvalue, v, upvalueIndex)
                        then
                            if ((name and name ~= "Unnamed function") and getInfo(v).name == name) and matchConstants(v, constants) then
                                return v
                            elseif (not name or name == "Unnamed function") and matchConstants(v, constants) then
                                return v
                            end
                        end
                    end
                end

                aux.placeholderUserdataConstant = placeholderUserdataConstant
                aux.searchClosure = searchClosure


                local scriptPath = workspace.SbAssets.Temperature
                local closureName = "Unnamed function"
                local upvalueIndex = 4
                local closureConstants = {
                    [1] = "Humanoid",
                    [2] = "Health",
                    [3] = "WeirdStrict",
                    [4] = "Value",
                    [5] = "Blizzard",
                    [6] = "TotalModifiers"
                }

                local closure = aux.searchClosure(scriptPath, closureName, upvalueIndex, closureConstants)
                local value = 10000000000000000000000



                debug.setupvalue(closure, upvalueIndex, value)

        ---------------

  end
})

local InfiniteBreath = Tabs.MainTab:AddToggle("InfiniteBreath", {Title = "Бесконечный оксиген (Луп)", Default = false })

InfiniteBreath:OnChanged(function()
    isInfiniteBreathEnabled = Options.InfiniteBreath.Value
    

   if isInfiniteBreathEnabled == true then

        while isInfiniteBreathEnabled do

            game.Players.LocalPlayer.Character.Breath:SetAttribute('Max', 21)
            game.Players.LocalPlayer.Character.Breath.Value = 21
            game:GetService("Lighting").Blur.Enabled = false
            workspace.Sounds.HeavyBreath.Playing = false


            task.wait()
        end


    else

        game.Players.LocalPlayer.Character.Breath:SetAttribute('Max', 20)

        if game.Players.LocalPlayer.Character.Breath.Value > game.Players.LocalPlayer.Character.Breath:GetAttribute('Max') then
            game.Players.LocalPlayer.Character.Breath.Value = game.Players.LocalPlayer.Character.Breath:GetAttribute('Max')
            else
            game.Players.LocalPlayer.Character.Breath.Value = game.Players.LocalPlayer.Character.Breath.Value
        end

   end
end)

local InfiniteSprint = Tabs.MainTab:AddToggle("InfiniteSprint", {Title = "Бесконечный спринт (Луп)", Default = false })

InfiniteSprint:OnChanged(function()
    isInfiniteSprintEnabled = Options.InfiniteSprint.Value
    

   if isInfiniteSprintEnabled == true then

        while isInfiniteSprintEnabled do

            game.Players.LocalPlayer.Character.Sprint.Stam:SetAttribute('Max', 6)
           game.Players.LocalPlayer.Character.Sprint.Stam.Value = 6


            task.wait()
        end


    else

       game.Players.LocalPlayer.Character.Sprint.Stam:SetAttribute('Max', 5)

        if game.Players.LocalPlayer.Character.Sprint.Stam.Value > game.Players.LocalPlayer.Character.Sprint.Stam:GetAttribute('Max') then
            game.Players.LocalPlayer.Character.Sprint.Stam.Value = game.Players.LocalPlayer.Character.Sprint.Stam:GetAttribute('Max')
        else
            game.Players.LocalPlayer.Character.Sprint.Stam.Value = game.Players.LocalPlayer.Character.Sprint.Stam.Value
        end

   end
end)

local MutantESP = Tabs.MainTab:AddToggle("MutantESP", {Title = "Подсветка монстра", Default = false })

MutantESP:OnChanged(function()

    if Options.MutantESP.Value == true then
        if not AntiCheatBypassed then Fluent:Notify({Title = "ERROR",Content = "Обойди античит сначала",SubContent = "",Duration = 1}) Options.MutantESP:SetValue(false) return end
    end

    isMutantESPEnabled = Options.MutantESP.Value
    

   if isMutantESPEnabled == true then

        while isMutantESPEnabled do

            if workspace:FindFirstChild('Mutant') and not workspace:FindFirstChild('Mutant'):FindFirstChild('Mutant_PESP') then
                ESP(workspace.Mutant)
            end


            task.wait()
        end


    else
    if not AntiCheatBypassed then return end
    if workspace:FindFirstChild('Mutant') then
        UNESP('Mutant', workspace)
    end
   end
end)

local MonsterNotify = Tabs.MainTab:AddToggle("MonsterNotify", {Title = "Уведомление о монстре", Default = false })

local MonsterNotifyFunc = nil
local MonsterNotifyFunc2 = nil

MonsterNotify:OnChanged(function()
if Options.MonsterNotify.Value == true then

    --if not AntiCheatBypassed then Fluent:Notify({Title = "ERROR",Content = "Обойди античит сначала",SubContent = "",Duration = 1}) Options.MonsterNotify:SetValue(false) return end
    
    if MonsterNotifyFunc == nil then
        MonsterNotifyFunc = workspace.ChildAdded:Connect(function(child)
            if child.Name == 'Mutant' then
                Fluent:Notify({
                Title = "УВЕДОМЛЕНИЕ",
                 Content = "МОНСТР ЗАСПАВНИЛСЯ",
                SubContent = "",
                Duration = 3
                })
            end
        end)
    end

    if MonsterNotifyFunc2 == nil then
        MonsterNotifyFunc2 = workspace.ChildRemoved:Connect(function(child)
            if child.Name == 'Mutant' then
                Fluent:Notify({
                Title = "УВЕДОМЛЕНИЕ",
                 Content = "МОНСТР ПРОПАЛ",
                SubContent = "",
                Duration = 3
                })
            end
        end)
    end

    else
    --if not AntiCheatBypassed then return end
    if MonsterNotifyFunc ~= nil then
        MonsterNotifyFunc:Disconnect()
        MonsterNotifyFunc = nil
        MonsterNotifyFunc2:Disconnect()
        MonsterNotifyFunc2 = nil
    end
   end

end)

local loopfb = Tabs.MainTab:AddToggle("loopfb", {Title = "loopfb", Description = "Типа фуллбрайт светло", Default = false })

loopfb:OnChanged(function()


    isloopfbEnabled = Options.loopfb.Value
    

   if isloopfbEnabled == true then

        while isloopfbEnabled do
            local Lighting = game.Lighting
            Lighting.Brightness = 2
		    Lighting.ClockTime = 14
		    Lighting.FogEnd = 100000
		    Lighting.GlobalShadows = false
		    Lighting.OutdoorAmbient = Color3.fromRGB(128, 128, 128)
            task.wait()
        end

   end
end)

local NoTemperature = Tabs.MainTab:AddToggle("NoTemperature", {Title = "Отключить скрипт на температуру (Замерзание)", Default = false})

NoTemperature:OnChanged(function()
if Options.NoTemperature.Value == true then

    game.Players.LocalPlayer.Character.Temperature.Enabled = false

else

    game.Players.LocalPlayer.Character.Temperature.Enabled = true

end

end)


local WalkAnimations = Tabs.MainTab:AddDropdown("WalkAnimations", {
        Title = "Анимации ходьбы",
        Values = {"Обычная", "Мутационная", "Раненный"},
        Multi = false,
        Default = 1,
})

WalkAnimations:OnChanged(function(value)
    if value == 'Обычная' then
        game.Players.LocalPlayer.Character.Animate.run.RunAnim.AnimationId = 'http://www.roblox.com/asset/?id=180426354'
        game.Players.LocalPlayer.Character.Animate.walk.WalkAnim.AnimationId = 'http://www.roblox.com/asset/?id=180426354'
    elseif value == 'Мутационная' then
        game.Players.LocalPlayer.Character.Animate.run.RunAnim.AnimationId = 'rbxassetid://105959612864729'
        game.Players.LocalPlayer.Character.Animate.walk.WalkAnim.AnimationId = 'rbxassetid://105959612864729'
    elseif value == 'Раненный' then
        game.Players.LocalPlayer.Character.Animate.run.RunAnim.AnimationId = 'rbxassetid://125185181472929'
        game.Players.LocalPlayer.Character.Animate.walk.WalkAnim.AnimationId = 'rbxassetid://125185181472929'

    end
end)

Tabs.MainTab:AddParagraph({
    Title = "Нелегитные функции",
    Content = "Ну типа по рейджу гонять окда"
})



local Slider = Tabs.MainTab:AddSlider("SpeedSliderOK", {
        Title = "Скорость игрока",
        Description = "",
        Default = 16,
        Min = 16,
        Max = 75,
        Rounding = 1,
        Callback = function(value)
        if AntiCheatBypassed then

            game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = value

        else
            if tonumber(value) > 16 then
            Fluent:Notify({
             Title = "ERROR",
             Content = "Обойди античит сначала",
             SubContent = "",
             Duration = 1
             })
            end
        end
        end
    })

    local Slider = Tabs.MainTab:AddSlider("JumpSliderOK", {
        Title = "Сила прыжка игрока",
        Description = "",
        Default = 50,
        Min = 50,
        Max = 75,
        Rounding = 1,
        Callback = function(value)
        if tonumber(value) > 50 and AntiCheatBypassed then
            game.Players.LocalPlayer.Character.Humanoid.UseJumpPower = true
            game.Players.LocalPlayer.Character.Humanoid.JumpPower = value

        else
            if tonumber(value) > 50 then
            Fluent:Notify({
             Title = "ERROR",
             Content = "Обойди античит сначала",
             SubContent = "",
             Duration = 1
             })
            end
        end
        end
    })


    Tabs.HubsTab:AddButton({
    Title = "Infinite Yield",
    Description = "",
    Callback = function()
        loadstring(game:HttpGet('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'))()
    end
})
